


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000                 AREA             DATA, ALIGN=2
   12 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Array   SPACE            20
   13 00000014                 IMPORT           ST7735_OutChar
   14 00000014                 IMPORT           ST7735_OutString
   15 00000014                 EXPORT           LCD_OutDec
   16 00000014                 EXPORT           LCD_OutFix
   17 00000014         
   18 00000014                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   19 00000000                 THUMB
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   24 00000000         ; Output a 32-bit number in unsigned decimal format
   25 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   26 00000000         ; Output: none
   27 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   28 00000000 00000000 
                       COUNT   EQU              0
   29 00000000         LCD_OutDec
   30 00000000         ; copy/paste Lab 7 solution here
   31 00000000         
   32 00000000         
   33 00000000 E92D 41F0       PUSH{R4,R5,R6,R7,R8,LR}
   34 00000004 B082            SUB              SP,#8       ;allocation
   35 00000006         ;MOV SP, SP
   36 00000006 F04F 0100       MOV              R1,#0
   37 0000000A F04F 0200       MOV              R2,#0
   38 0000000E F04F 0300       MOV              R3,#0
   39 00000012 F04F 0400       MOV              R4,#0
   40 00000016 F04F 0500       MOV              R5,#0
   41 0000001A F04F 0600       MOV              R6,#0
   42 0000001E F04F 0700       MOV              R7,#0
   43 00000022 9700            STR              R7,[SP,#COUNT] ; access
   44 00000024         
   45 00000024 2809            CMP              R0, #9



ARM Macro Assembler    Page 2 


   46 00000026 D928            BLS              ZERO
   47 00000028         
   48 00000028 494A            LDR              R1, =Array
   49 0000002A 4602            MOV              R2,R0       ;R2=497
   50 0000002C F04F 060A       MOV              R6,#10
   51 00000030 FBB2 F3F6 
                       AGAIN   UDIV             R3, R2,R6   ; R3=49 4
   52 00000034 FB03 F406       MUL              R4,R3,R6    ; R4=49*10=490 40
   53 00000038 EBA2 0504       SUB              R5, R2,R4   ; R5 = 497-490=7; 9
                                                            
   54 0000003C         
   55 0000003C 700D            STRB             R5,[R1]     ; PUT IT INTO THE A
                                                            RRAY
   56 0000003E 2C00            CMP              R4,#0
   57 00000040 D007            BEQ              PRINT       ; THIS MEANS WE ARE
                                                             DONE AND READY TO 
                                                            PRINT
   58 00000042         
   59 00000042         
   60 00000042 9F00            LDR              R7, [SP,#COUNT]
   61 00000044 F107 0701       ADD              R7,R7,#1    ;INCREMENT COUNTER
   62 00000048 9700            STR              R7, [SP,#COUNT]
   63 0000004A F101 0101       ADD              R1,R1,#1    ;NEXT SPOT IN ARRAY
                                                            
   64 0000004E 461A            MOV              R2,R3
   65 00000050 E7EE            B                AGAIN
   66 00000052         
   67 00000052 9F00    PRINT   LDR              R7, [SP,#COUNT]
   68 00000054 F107 0701       ADD              R7,R7,#1    ;INCREMENT COUNTER
   69 00000058 9700            STR              R7, [SP,#COUNT]
   70 0000005A 7808    LOOP    LDRB             R0,[R1]     ; top of array = 4
   71 0000005C         
   72 0000005C         ;STRB R2,[R1]
   73 0000005C F100 0030       ADD              R0, R0,#0X30
   74 00000060         
   75 00000060 B406            PUSH{R1,R2}
   76 00000062 F7FF FFFE       BL               ST7735_OutChar
   77 00000066 BC06            POP{R1,R2}
   78 00000068         
   79 00000068 9F00            LDR              R7, [SP,#COUNT]
   80 0000006A F1A7 0701       SUB              R7,R7,#1    ;INCREMENT COUNTER
   81 0000006E 9700            STR              R7, [SP,#COUNT]
   82 00000070 2F00            CMP              R7,#0
   83 00000072 DD06            BLE              DONE
   84 00000074 F1A1 0101       SUB              R1,R1,#1
   85 00000078         
   86 00000078 E7EF            B                LOOP
   87 0000007A         
   88 0000007A F100 0030 
                       ZERO    ADD              R0,R0,#0X30
   89 0000007E         
   90 0000007E F7FF FFFE       BL               ST7735_OutChar
   91 00000082         
   92 00000082         
   93 00000082 B002    DONE    ADD              SP, #8      ; deallocation
   94 00000084         ;MOV SP,SP
   95 00000084 E8BD 41F0       POP{R4,R5,R6,R7,R8,LR}
   96 00000088         
   97 00000088 4770            BX               LR



ARM Macro Assembler    Page 3 


   98 0000008A         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   99 0000008A         
  100 0000008A         ; -----------------------LCD _OutFix--------------------
                       --
  101 0000008A         ; Output characters to LCD display in fixed-point format
                       
  102 0000008A         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
  103 0000008A         ; Inputs:  R0 is an unsigned 32-bit number
  104 0000008A         ; Outputs: none
  105 0000008A         ; E.g., R0=0,    then output "0.000 "
  106 0000008A         ;       R0=3,    then output "0.003 "
  107 0000008A         ;       R0=89,   then output "0.089 "
  108 0000008A         ;       R0=123,  then output "0.123 "
  109 0000008A         ;       R0=9999, then output "9.999 "
  110 0000008A         ;       R0>9999, then output "*.*** "
  111 0000008A         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  112 0000008A 00000000 
                       DIVIDE  EQU              0
  113 0000008A         LCD_OutFix
  114 0000008A         ; copy/paste Lab 7 solution here
  115 0000008A         
  116 0000008A         
  117 0000008A B570            PUSH{R4,R5,R6,   LR}
  118 0000008C B082            SUB              SP,#8       ; aloccation
  119 0000008E F04F 0500       MOV              R5,#0
  120 00000092 9500            STR              R5,[SP,#DIVIDE]
  121 00000094 F5B0 7F7A       CMP              R0,#1000
  122 00000098 D240            BHS              FALSE
  123 0000009A         
  124 0000009A         
  125 0000009A 4601            MOV              R1, R0      ;R1 IS THE VALUE =2
                                                            22
  126 0000009C F04F 0264       MOV              R2, #100
  127 000000A0 FBB1 F3F2       UDIV             R3, R1,R2   ;R3 = 2
  128 000000A4 FB03 F402       MUL              R4, R3, R2  ; R4=200
  129 000000A8         
  130 000000A8 9D00            LDR              R5, [SP,#DIVIDE]
  131 000000AA EBA1 0504       SUB              R5, R1, R4  ; R5 = 222-200=22
  132 000000AE 9500            STR              R5, [SP,#DIVIDE]
  133 000000B0         
  134 000000B0 4618            MOV              R0,R3
  135 000000B2 F100 0030       ADD              R0,R0,#0X30
  136 000000B6 B4F0            PUSH{R4,R5,R6,R7}
  137 000000B8 F7FF FFFE       BL               ST7735_OutChar
  138 000000BC BCF0            POP{R4,R5,R6,R7}
  139 000000BE 4628            MOV              R0,R5
  140 000000C0         
  141 000000C0 F04F 002E       MOV              R0,#0X2E
  142 000000C4 B4F0            PUSH{R4,R5,R6,R7}
  143 000000C6 F7FF FFFE       BL               ST7735_OutChar
  144 000000CA BCF0            POP{R4,R5,R6,R7}
  145 000000CC 4628            MOV              R0,R5
  146 000000CE         
  147 000000CE         
  148 000000CE 4601            MOV              R1, R0      ;R1 IS THE VALUE =2
                                                            22
  149 000000D0 F04F 020A       MOV              R2, #10



ARM Macro Assembler    Page 4 


  150 000000D4 FBB1 F3F2       UDIV             R3, R1,R2   ;R3 = 2
  151 000000D8 FB03 F402       MUL              R4, R3, R2  ; R4=200
  152 000000DC         
  153 000000DC 9D00            LDR              R5, [SP,#DIVIDE]
  154 000000DE EBA1 0504       SUB              R5, R1, R4  ; R5 = 222-200=22
  155 000000E2 9500            STR              R5, [SP,#DIVIDE]
  156 000000E4         
  157 000000E4 4618            MOV              R0,R3
  158 000000E6 F100 0030       ADD              R0,R0,#0X30
  159 000000EA B4F0            PUSH{R4,R5,R6,R7}
  160 000000EC F7FF FFFE       BL               ST7735_OutChar
  161 000000F0 BCF0            POP{R4,R5,R6,R7}
  162 000000F2 4628            MOV              R0,R5
  163 000000F4         
  164 000000F4 4601            MOV              R1, R0      ;R1 IS THE VALUE =2
                                                            22
  165 000000F6 F04F 0201       MOV              R2, #1
  166 000000FA FBB1 F3F2       UDIV             R3, R1,R2   ;R3 = 2
  167 000000FE FB03 F402       MUL              R4, R3, R2  ; R4=200
  168 00000102         
  169 00000102 9D00            LDR              R5, [SP,#DIVIDE]
  170 00000104 EBA1 0504       SUB              R5, R1, R4  ; R5 = 222-200=22
  171 00000108 9500            STR              R5, [SP,#DIVIDE]
  172 0000010A         
  173 0000010A 4618            MOV              R0,R3
  174 0000010C F100 0030       ADD              R0,R0,#0X30
  175 00000110 B4F0            PUSH{R4,R5,R6,R7}
  176 00000112 F7FF FFFE       BL               ST7735_OutChar
  177 00000116 BCF0            POP{R4,R5,R6,R7}
  178 00000118 4628            MOV              R0,R5
  179 0000011A         
  180 0000011A         
  181 0000011A         
  182 0000011A E017            B                FIN
  183 0000011C         
  184 0000011C F04F 002A 
                       FALSE   MOV              R0, #0X2A
  185 00000120 B4F0            PUSH{R4,R5,R6,R7}
  186 00000122 F7FF FFFE       BL               ST7735_OutChar
  187 00000126 BCF0            POP{R4,R5,R6,R7}
  188 00000128 F04F 002E       MOV              R0, #0X2E
  189 0000012C B4F0            PUSH{R4,R5,R6,R7}
  190 0000012E F7FF FFFE       BL               ST7735_OutChar
  191 00000132 BCF0            POP{R4,R5,R6,R7}
  192 00000134 F04F 002A       MOV              R0, #0X2A
  193 00000138 B4F0            PUSH{R4,R5,R6,R7}
  194 0000013A F7FF FFFE       BL               ST7735_OutChar
  195 0000013E BCF0            POP{R4,R5,R6,R7}
  196 00000140 F04F 002A       MOV              R0, #0X2A
  197 00000144 B4F0            PUSH{R4,R5,R6,R7}
  198 00000146 F7FF FFFE       BL               ST7735_OutChar
  199 0000014A BCF0            POP{R4,R5,R6,R7}
  200 0000014C         
  201 0000014C B002    FIN     ADD              SP, #8      ; deallocation
  202 0000014E E8BD 4070       POP{R4,R5,R6,    LR}
  203 00000152 4770            BX               LR
  204 00000154         
  205 00000154                 ALIGN
  206 00000154         ;* * * * * * * * End of LCD_OutFix * * * * * * * *



ARM Macro Assembler    Page 5 


  207 00000154         
  208 00000154                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  209 00000154                 END                          ; end of file
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_SpaceInvaders -IC:\Users\ammar\AppD
ata\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\ammar\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --
predefine="TM4C123GH6PM SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Array 00000000

Symbol: Array
   Definitions
      At line 12 in file Print.s
   Uses
      At line 48 in file Print.s
Comment: Array used once
DATA 00000000

Symbol: DATA
   Definitions
      At line 11 in file Print.s
   Uses
      None
Comment: DATA unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 18 in file Print.s
   Uses
      None
Comment: .text unused
AGAIN 00000030

Symbol: AGAIN
   Definitions
      At line 51 in file Print.s
   Uses
      At line 65 in file Print.s
Comment: AGAIN used once
DONE 00000082

Symbol: DONE
   Definitions
      At line 93 in file Print.s
   Uses
      At line 83 in file Print.s
Comment: DONE used once
FALSE 0000011C

Symbol: FALSE
   Definitions
      At line 184 in file Print.s
   Uses
      At line 122 in file Print.s
Comment: FALSE used once
FIN 0000014C

Symbol: FIN
   Definitions
      At line 201 in file Print.s
   Uses
      At line 182 in file Print.s
Comment: FIN used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 29 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 0000008A

Symbol: LCD_OutFix
   Definitions
      At line 113 in file Print.s
   Uses
      At line 16 in file Print.s
Comment: LCD_OutFix used once
LOOP 0000005A

Symbol: LOOP



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 70 in file Print.s
   Uses
      At line 86 in file Print.s
Comment: LOOP used once
PRINT 00000052

Symbol: PRINT
   Definitions
      At line 67 in file Print.s
   Uses
      At line 57 in file Print.s
Comment: PRINT used once
ZERO 0000007A

Symbol: ZERO
   Definitions
      At line 88 in file Print.s
   Uses
      At line 46 in file Print.s
Comment: ZERO used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COUNT 00000000

Symbol: COUNT
   Definitions
      At line 28 in file Print.s
   Uses
      At line 43 in file Print.s
      At line 60 in file Print.s
      At line 62 in file Print.s
      At line 67 in file Print.s
      At line 69 in file Print.s
      At line 79 in file Print.s
      At line 81 in file Print.s

DIVIDE 00000000

Symbol: DIVIDE
   Definitions
      At line 112 in file Print.s
   Uses
      At line 120 in file Print.s
      At line 130 in file Print.s
      At line 132 in file Print.s
      At line 153 in file Print.s
      At line 155 in file Print.s
      At line 169 in file Print.s
      At line 171 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 13 in file Print.s
   Uses
      At line 76 in file Print.s
      At line 90 in file Print.s
      At line 137 in file Print.s
      At line 143 in file Print.s
      At line 160 in file Print.s
      At line 176 in file Print.s
      At line 186 in file Print.s
      At line 190 in file Print.s
      At line 194 in file Print.s
      At line 198 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 14 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
352 symbols in table
